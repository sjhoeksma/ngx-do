{
  "tags" : [{
    "name": "Users",
    "description": "API for users in the system"
  }],
  "paths": {
    "/users": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Create new user in system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
                "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Existing User returned",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "201": {
            "description": "New user is created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "ID of user that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user with given ID",
        "responses": {
          "200": {
            "description": "User is found",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user with given ID",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "User is deleted",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "put": {
        "summary": "Update user with give ID",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User with new values of properties",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User is updated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    }
  },
  
  "definitions": {
    "User": {
      "description": "A user object",
      "required": [
        "email"
      ],
       "allOf": [ {
          "type": "object",
          "required": [
          ],
          "properties": {
            "id": {
              "type": "string",
              "uniqueItems": true,
              "description": "UUID linked to the Auth table, when null id will be generated",
              "default": null
            },
            "email": {
              "type": "string",
              "uniqueItems": true,
              "description": "email address, when not set system assumes auth.login"
            },
            "avatar_url": {
              "type": "string",
              "description": "URL to the avatar of the user"
            },
            "orgGroup": {
              "type": "string",
              "description": "The organisation group the user is belonging to"
            }
          }
        },{"$ref": "#/definitions/ngx-do-api"}
      ]
    },
    "Users": {
      "type": "array",
      "description": "Array of user object",
      "$ref": "#/definitions/User"
    }
  }
}
